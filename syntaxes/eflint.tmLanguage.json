{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "eFLINT",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#buildins"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#implicit-strings"
		},
		{
			"include": "#comments"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.eflint",
					"match": "\\b(Fact|Placeholder|Predicate|Invariant|Event|Act|Duty|Extend)\\b"
				},
				{
					"name": "keyword.control.eflint",
					"match": "\\b(Identified by|Actor|Recipient|Holder|Claimant|Terminated by|Violated when|Related to|Syncs with|Holds when|Derived from|Conditioned by|Creates|Obfuscated|Terminates)\\b"
				},
				{
					"name": "keyword.operator.eflint",
					"match": "(\\+|-|\\*|/|\\?|!|\\.|\\|\\||&&|==|!=|<=|<|>=|>)"
				},
				{
					"name": "keyword.operator.eflint",
					"match": "\\b(Not|Foreach|Exists|Forall|Sum|Count|Max|Min|When)\\b"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.numeric.eflint",
					"match": "\\b-?[0-9]+\\b"
				},
				{
					"name": "constant.language",
					"match": "\\b(true|false|True|False)\\b"
				}
			]
		},
		"buildins": {
			"patterns": [{
				"name": "support.function.eflint",
				"match": "\\b(String|Int|Bool|Boolean|Time|Atom)\\b"
			}]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.language.eflint",
					"match": "\\b(string|int|bool)\\b"
				},
				{
					"name": "variable.language.other",
					"match": "([a-z_][A-Za-z0-9-_]*|\\[[A-Za-z_][A-Za-z0-9_\\- ]*\\])"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.eflint",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.eflint",
					"match": "\\\\[\\'\"trn]"
				}
			]
		},
		"implicit-strings": {
			"patterns": [{
				"name": "string.other.eflint",
				"match": "\\b[A-Z][A-Za-z0-9\\-_]*\\b"
			}]
		},
		"comments": {
			"patterns": [{
				"name": "comment.line.double-slash",
				"match": "//.*\n"
			}]
		}
	},
	"scopeName": "source.eflint"
}